{"mappings":"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","sources":["src/javascripts/weekly-trends-genres.js","src/javascripts/weekly-trends-main.js","src/javascripts/weekly-trends-markup.js","src/javascripts/movieModal.js","src/javascripts/movieDetailProvider.js","src/upcoming/helpers.js","node_modules/@parcel/runtime-js/lib/runtime-4f63533f89ced1db.js","node_modules/@parcel/runtime-js/lib/runtime-eafab5d632276479.js"],"sourcesContent":["import { onError } from './weekly-trends-main';\nimport axios from 'axios';\nexport async function getGenres() {\n  try {\n    const genres = await axios.get(\n      'https://api.themoviedb.org/3/genre/movie/list?api_key=41b8f9437bf3f899281f8a3f9bdc0891'\n    );\n    localStorage.setItem('genres', JSON.stringify(genres.data.genres));\n    return genres;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport async function validateGenres(genresArray, genresData) {\n  try {\n    const allGenres = Array.from(genresData);\n    const genresNames = genresArray.map(genreId => {\n      const genre = allGenres.find(genre => genre.id === genreId);\n      return genre ? genre.name : '';\n    });\n    let genresString = '';\n    if (genresNames.length > 2) {\n      genresString = genresNames.slice(0, 2).join(', ');\n    } else {\n      genresString = genresNames.join(', ');\n    }\n\n    return genresString;\n  } catch (error) {\n    onError(error);\n    return '';\n  }\n}\n","import axios from 'axios';\nimport './weekly-trends-markup.js';\nimport { createMarkup } from './weekly-trends-markup.js';\nimport { getGenres } from './weekly-trends-genres.js';\nconst refs = {\n  trendsList: document.querySelector('.cards-list'),\n};\nwindow.addEventListener('load', showWeeklyTrends);\n\n//getGenres();\nexport function showWeeklyTrends() {\n  const screenWidth = window.innerWidth;\n  const numMovies = screenWidth < 768 ? 1 : 3;\n  getGenres();\n  getTrendyFilms().then(({ data }) => {\n    const films = data.results.slice(0, numMovies);\n\n    createMarkup(films);\n    // .then(() => {\n    //   console.log(data);\n    // });\n  });\n}\n\nasync function getTrendyFilms() {\n  try {\n    const films = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/week?api_key=41b8f9437bf3f899281f8a3f9bdc0891'\n    );\n\n    return films;\n  } catch (error) {\n    onError(error);\n  }\n}\n\nexport function onError(error) {\n  console.log(` error  ${error}`);\n}\n","import { validateGenres } from './weekly-trends-genres';\nimport starsRating from './stars-rating';\nimport { openModalAboutFilm } from './movieModal';\n\nexport function createMarkup(films) {\n  const markup = films.map(\n    async ({\n      id,\n      poster_path,\n      release_date,\n      title,\n      genre_ids,\n      vote_average,\n    }) => {\n      const genresPromise = validateGenres(\n        genre_ids,\n        JSON.parse(localStorage.getItem('genres'))\n      );\n      const posterPath = `https://image.tmdb.org/t/p/original/${poster_path}`;\n\n      let releaseDate = '';\n      if (release_date === 'undefind') {\n        releaseDate = 'Date unknown';\n      } else {\n        releaseDate = release_date.split('-')[0];\n      }\n\n      const genres = await genresPromise;\n\n      return `<li class=\"card-item item\" data-id=\"${id}\">\n            <img class=\"film-poster\" src=\"https://image.tmdb.org/t/p/original/${posterPath}\" alt=\"${title} poster\" />\n            <div class=\"overlay\">\n              <div class=\"film-info\">\n                <p class=\"film-title\">${title}</p>\n                <div class=\"film-details\">\n                  <span class=\"film-description\">${genres} | ${releaseDate}</span>\n                  <div class=\"stars-container\">${starsRating({\n                    voteAverage: vote_average,\n                    isHero: false,\n                  })}</div>\n\t\t\t\t\t\t\t\t\t<!-- <span class=\"film-rating\">${vote_average}</span> -->\n                </div>\n              </div>\n            </div>\n          </li>`;\n    }\n  );\n\n  return Promise.all(markup).then(results => {\n    const finalMarkup = results.join('');\n    document\n      .querySelector('.cards-list')\n      .insertAdjacentHTML('beforeend', finalMarkup);\n\n    const filmList = document.querySelector('.listListener');\n\n    filmList.addEventListener('click', event => {\n      const li = event.target.closest('.card-item');\n\n      const movieId = li.getAttribute('data-id');\n      openModalAboutFilm(movieId);\n    });\n  });\n}\n","import MovieDetailProviver from './movieDetailProvider.js';\nimport { roundToTen, findFilmAtStorage } from '../upcoming/helpers.js';\nimport { handleFilm } from './library/library.js';\nimport { API_KEY, STORAGE_KEY } from '../fetch/api_key.js';\nimport defaultImg from '../images/default.jpg';\n\n// const STORAGE_KEY = 'my_film';\nconst movieDetailProviver = new MovieDetailProviver(API_KEY);\nlet modalInstance = null;\n\nclass MovieModal {\n  constructor() {\n    if (modalInstance !== null) return modalInstance;\n\n    this.body = document.querySelector('body');\n    this.body.insertAdjacentHTML('beforeend', instanceModalHTML());\n    this.refs = {\n      modal: document.querySelector('[data-modal]'),\n      modalCloseBtn: document.querySelector('[data-modal-close]'),\n      posterPath: document.querySelector('#modal-film-poster-path'),\n      title: document.querySelector('#modal-film-title'),\n      voteAverage: document.querySelector('#modal-film-vote-average'),\n      voteCount: document.querySelector('#modal-film-vote-count'),\n      popularity: document.querySelector('#modal-film-popularity'),\n      genre: document.querySelector('#modal-film-genre'),\n      description: document.querySelector('#modal-film-description'),\n      modalOpenBtn: document.querySelector('#open-modal'),\n      modalAddOrRemoveBtn: document.querySelector('#modal-film-add-or-rm'),\n    };\n\n    this.refs.modalCloseBtn.addEventListener('click', () => this.hide());\n    this.refs.modalAddOrRemoveBtn.addEventListener('click', event =>\n      handleFilm(event)\n    );\n    document.addEventListener('keydown', event =>\n      event.key === 'Escape' ? this.hide() : null\n    );\n    window.addEventListener('click', event =>\n      event.target === this.refs.modal ? this.hide() : null\n    );\n\n    modalInstance = this;\n  }\n\n  show() {\n    this.refs.modal.classList.remove('modal-film-is-hidden');\n    this.body.classList.add('body--modal-open');\n  }\n\n  hide() {\n    this.refs.modal.classList.add('modal-film-is-hidden');\n    this.body.classList.remove('body--modal-open');\n  }\n\n  refreshData(data) {\n    this.refs.posterPath.src = data.poster_path\n      ? `https://image.tmdb.org/t/p/w500${data.poster_path}`\n      : `${defaultImg}`;\n    this.refs.title.textContent = `${data.title}`;\n    this.refs.voteAverage.textContent = `${roundToTen(data.vote_average)}`;\n    this.refs.voteCount.textContent = `${data.vote_count}`;\n    this.refs.popularity.textContent = `${roundToTen(data.popularity)}`;\n    this.refs.genre.textContent = `${data.genres\n      .map(genre => genre.name)\n      .join(', ')}`;\n    this.refs.description.textContent = `${data.overview}`;\n  }\n\n  refreshBtn(movieId, btnAttribute, btnText) {\n    this.refs.modalAddOrRemoveBtn.setAttribute('data-id', movieId);\n    this.refs.modalAddOrRemoveBtn.setAttribute('data-' + btnAttribute, '');\n    this.refs.modalAddOrRemoveBtn.textContent = btnText;\n  }\n}\n\n//use this method to open a modal.\nexport function openModalAboutFilm(movieId) {\n  const modal = new MovieModal();\n\n  const isSaved = findFilmAtStorage(STORAGE_KEY, movieId);\n  const btnAttribute = isSaved ? 'remove' : 'add';\n  const btnText = isSaved ? 'Remove from my library' : 'Add to my library';\n\n  movieDetailProviver\n    .getMovieDetails(movieId)\n    .then(response => {\n      modal.refreshData(response.data);\n      modal.refreshBtn(movieId, btnAttribute, btnText);\n\n      modal.show();\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\nfunction instanceModalHTML() {\n  return `\n  <div class=\"modal-info-film-backdrop modal-film-is-hidden\" data-modal>\n    <div class=\"modal-about-film\">\n      <button type=\"button\" class=\"modal__close-btn\" data-modal-close>\n        <svg class=\"modal__close-icon\" width=\"30\" height=\"30\" aria-label=\"Close\">\n          <path d=\"M18 6L6 18M6 6L18 18\"  stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        </svg>\n      </button>\n      <div class=\"modal-film-info-wrapper\">\n        <div class=\"modal-wrapper-img\">\n          <img\n            class=\"modal-film-img\"\n            id=\"modal-film-poster-path\"\n            src=\"https://organisasi.kalbarprov.go.id/assets/images/no_image.png\"\n            alt=\"\"\n          />\n        </div>\n        <div class=\"film-text-info-wrapper\">\n          <h3 class=\"modal-film-title\" id=\"modal-film-title\"></h3>\n          <ul class=\"modal-film-info-list\">\n            <li class=\"modal-film-info-item\">\n              <p class=\"modal-film-info-label\">Vote / Votes</p>\n              <p class=\"modal-film-info-desc\">\n                <span\n                  class=\"desc-voted desc-vote-average\"\n                  id=\"modal-film-vote-average\"\n                ></span>\n                /\n                <span\n                  class=\"desc-voted desc-votes-count\"\n                  id=\"modal-film-vote-count\"\n                ></span>\n              </p>\n            </li>\n            <li class=\"modal-film-info-item\">\n              <p class=\"modal-film-info-label\">Popularity</p>\n              <p class=\"modal-film-info-desc\" id=\"modal-film-popularity\"></p>\n            </li>\n            <li class=\"modal-film-info-item\">\n              <p class=\"modal-film-info-label\">Genre</p>\n              <p\n                class=\"modal-film-info-desc film-info__desc--normal-text\"\n                id=\"modal-film-genre\"\n              ></p>\n            </li>\n          </ul>\n          <p class=\"modal-film-info-label\">ABOUT</p>\n          <div class=\"container-film-descr\">\n            <p class=\"modal-film__description\" id=\"modal-film-description\"></p>\n          </div>\n          <button class=\"modal-btn-add-libr\"  type=\"button\" id=\"modal-film-add-or-rm\">Add to my library</button>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  `;\n}\n","import axios from 'axios';\n\nexport default class movieDetailProviver {\n    constructor(apiKey){\n        this.apiKey = apiKey\n    }\n    \n    getMovieDetails(movieId) {\n        const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${this.apiKey}`;\n        return axios.get(url);\n    }\n}","export function getRandomItem(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function roundToTen(number) {\n  return Math.floor(number * 10) / 10;\n}\n\nexport function findFilmAtStorage(key, id) {\n  const savedFilms = JSON.parse(localStorage.getItem(key));\n  return savedFilms?.find(film => film.id === id) || null;\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bfHyM\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"fPbbd\\\":\\\"index.d5e7cb8b.js\\\",\\\"bfHyM\\\":\\\"default.183d728c.jpg\\\",\\\"79VY6\\\":\\\"library.dec30e3a.js\\\"}\"));"],"names":["$42UQi","parcelRequire","async","$01ee65d0c59c1c10$export$c5604fa8028da00","genres","$2shzp","default","get","localStorage","setItem","JSON","stringify","data","error","onError","$01ee65d0c59c1c10$export$3405d2a8709f05df","genresArray","genresData","allGenres","Array","from","genresNames","map","genreId","genre1","find","genre","id","name","genresString","length","slice","join","document","querySelector","$2f237113885af6b2$export$2288787135a8f66e","console","log","window","addEventListener","numMovies","innerWidth","$ahm89","getGenres","$2f237113885af6b2$var$getTrendyFilms","then","films","results","$b1IGm","createMarkup","$807272af7bf6a361$export$24783e9f3a24abe4","markup","poster_path","release_date","title","genre_ids","vote_average","genresPromise","validateGenres","parse","getItem","posterPath","releaseDate","split","$6EJun","voteAverage","isHero","Promise","all","finalMarkup","insertAdjacentHTML","event","movieId","target","closest","getAttribute","$70FDK","openModalAboutFilm","$9M1hO","$51a8d552004f4543$var$movieDetailProviver","$l6Rnt","API_KEY","$51a8d552004f4543$var$modalInstance","$51a8d552004f4543$var$MovieModal","constructor","this","body","refs","modal","modalCloseBtn","voteCount","popularity","description","modalOpenBtn","modalAddOrRemoveBtn","hide","$6lPyI","handleFilm","key","show","classList","remove","add","refreshData","src","$parcel$interopDefault","$iuZ0p","textContent","$lH8sM","roundToTen","vote_count","overview","refreshBtn","btnAttribute","btnText","setAttribute","$51a8d552004f4543$export$88aeaf379c331d9","isSaved","findFilmAtStorage","STORAGE_KEY","getMovieDetails","response","catch","$71d998307831805b$export$2e2bcd8739ae039","apiKey","url","$fcb42dc3b30a6297$export$7e5e7f25b087e5f","number","Math","floor","$fcb42dc3b30a6297$export$404aba46ef5e4155","film","module","exports","URL","resolve","import","meta","toString","register"],"version":3,"file":"index.d5e7cb8b.js.map"}